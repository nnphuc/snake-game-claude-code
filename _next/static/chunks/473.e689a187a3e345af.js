"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[473],{1473:function(e,s,t){t.r(s),t.d(s,{default:function(){return O}});var a=t(7437),n=t(2265);let r=e=>({type:"classic",gridSize:e,obstacles:[],portals:[]}),o=e=>{let s=[],t=Math.floor(e*e*.05);for(let a=0;a<t;a++){let t,a;do t=Math.floor(Math.random()*e),a=Math.floor(Math.random()*e);while(t>=e/2-3&&t<=e/2+3&&a>=e/2-3&&a<=e/2+3);s.push({x:t,y:a})}return{type:"obstacles",gridSize:e,obstacles:s,portals:[]}},l=e=>{let s=[],t=Math.floor(e/2);for(let t=0;t<e;t++)t!==Math.floor(e/4)&&t!==Math.floor(3*e/4)&&(s.push({x:0,y:t}),s.push({x:e-1,y:t})),t!==Math.floor(e/4)&&t!==Math.floor(3*e/4)&&(s.push({x:t,y:0}),s.push({x:t,y:e-1}));let a=Math.floor(e/4);for(let n=3;n<e-3;n++)n!==t&&n%3!=0&&(s.push({x:a,y:n}),s.push({x:3*a,y:n}));for(let n=3;n<e-3;n++)(n<t-3||n>t+3)&&n%4!=0&&(s.push({x:n,y:a}),s.push({x:n,y:3*a}));return{type:"maze",gridSize:e,obstacles:s,portals:[]}},i=e=>{let s=[],t=Math.floor(e*e*.03);for(let a=0;a<t;a++){let t,a;do t=Math.floor(Math.random()*e),a=Math.floor(Math.random()*e);while(t>=e/2-3&&t<=e/2+3&&a>=e/2-3&&a<=e/2+3);s.push({x:t,y:a})}return{type:"portal",gridSize:e,obstacles:s,portals:[{entrance:{x:2,y:2},exit:{x:e-3,y:e-3}},{entrance:{x:2,y:e-3},exit:{x:e-3,y:2}}]}},c=(e,s)=>{switch(e){case"classic":default:return r(s);case"obstacles":return o(s);case"maze":return l(s);case"portal":return i(s)}},d=(e,s)=>e.x===s.x&&e.y===s.y,h=(e,s)=>s.some(s=>d(s,e)),x=(e,s)=>{for(let t of s)if(d(e,t.entrance))return t.exit;return null},p=e=>{let s;let{snake:t,gridSize:a,map:n}=e;do s={x:Math.floor(Math.random()*a),y:Math.floor(Math.random()*a)};while(h(s,t)||h(s,n.obstacles)||n.portals.some(e=>d(s,e.entrance)||d(s,e.exit)));return s},m=(e,s)=>{let t={...e};switch(s){case"UP":t.y-=1;break;case"DOWN":t.y+=1;break;case"LEFT":t.x-=1;break;case"RIGHT":t.x+=1}return t},u=(e,s)=>("UP"!==e||"DOWN"!==s)&&("DOWN"!==e||"UP"!==s)&&("LEFT"!==e||"RIGHT"!==s)&&("RIGHT"!==e||"LEFT"!==s),y=(e,s)=>{let t;let{snake:a,food:n,map:r,gridSize:o}=e,l=0;do(t=l<4?[{x:1,y:1},{x:o-2,y:1},{x:1,y:o-2},{x:o-2,y:o-2}][l]:{x:Math.floor(Math.random()*o),y:Math.floor(Math.random()*o)}).x,t.y,l++;while((h(t,a)||d(t,n)||h(t,r.obstacles)||s.some(e=>d(e.position,t))||r.portals.some(e=>d(e.entrance,t)||d(e.exit,t)))&&l<100);return t},g=()=>{let e=["UP","DOWN","LEFT","RIGHT"];return e[Math.floor(Math.random()*e.length)]},f=e=>{let s=["blinky","pinky","inky"],t=[];for(let a=0;a<s.length;a++){let n=y(e,t);t.push({type:s[a],position:n,direction:g(),speed:3+a,moveCounter:0,state:"normal"})}return t},v=e=>{let s;let{snake:t,food:a,map:n,ghosts:r,gridSize:o}=e;if(Math.random()>.3)return null;let l=0;do s={x:Math.floor(Math.random()*o),y:Math.floor(Math.random()*o)},l++;while((h(s,t)||d(s,a)||h(s,n.obstacles)||r.some(e=>d(e.position,s))||n.portals.some(e=>d(e.entrance,s)||d(e.exit,s)))&&l<50);return l<50?s:null},b=(e,s,t)=>{let a=s[0],n=e.position,r={...n};switch(e.type){case"blinky":Math.abs(a.x-n.x)>Math.abs(a.y-n.y)?r.x+=a.x>n.x?1:a.x<n.x?-1:0:r.y+=a.y>n.y?1:a.y<n.y?-1:0;break;case"pinky":let o={...a};switch(s.length>1?j(s):"RIGHT"){case"UP":o.y-=4;break;case"DOWN":o.y+=4;break;case"LEFT":o.x-=4;break;case"RIGHT":o.x+=4}Math.abs(o.x-n.x)>Math.abs(o.y-n.y)?r.x+=o.x>n.x?1:o.x<n.x?-1:0:r.y+=o.y>n.y?1:o.y<n.y?-1:0;break;case"inky":if(.75>Math.random()).5>Math.random()?r.x+=a.x>n.x?1:a.x<n.x?-1:0:r.y+=a.y>n.y?1:a.y<n.y?-1:0;else switch(g()){case"UP":r.y-=1;break;case"DOWN":r.y+=1;break;case"LEFT":r.x-=1;break;case"RIGHT":r.x+=1}}return r.x<0&&(r.x=t-1),r.x>=t&&(r.x=0),r.y<0&&(r.y=t-1),r.y>=t&&(r.y=0),r},j=e=>{if(e.length<2)return"RIGHT";let s=e[0],t=e[1];return s.x>t.x?"RIGHT":s.x<t.x?"LEFT":s.y>t.y?"DOWN":s.y<t.y?"UP":"RIGHT"},k=e=>{let{gridSize:s}=e,t=[{x:1,y:1},{x:s-2,y:1},{x:1,y:s-2},{x:s-2,y:s-2}];return t[Math.floor(Math.random()*t.length)]},M=(e,s,t)=>{let a=s[0],n=e.position,r={...n};if(Math.abs(a.x-n.x)>Math.abs(a.y-n.y)?r.x+=a.x>n.x?-1:1:r.y+=a.y>n.y?-1:1,.25>Math.random())switch(g()){case"UP":r.y-=1;break;case"DOWN":r.y+=1;break;case"LEFT":r.x-=1;break;case"RIGHT":r.x+=1}return r.x<0&&(r.x=t-1),r.x>=t&&(r.x=0),r.y<0&&(r.y=t-1),r.y>=t&&(r.y=0),r},w=e=>{let{ghosts:s,snake:t,map:a,gridSize:n,powerMode:r}=e;return e.ghostsActive?s.map(e=>{if("eaten"===e.state)return e;e.moveCounter+=1;let s="frightened"===e.state?1.5*e.speed:e.speed;if(e.moveCounter>=s){let s;h(s="frightened"===e.state?M(e,t,n):b(e,t,n),a.obstacles)||a.portals.some(e=>d(e.entrance,s)||d(e.exit,s))?e.direction=g():e.position=s,e.moveCounter=0}return r&&"normal"===e.state?e.state="frightened":r||"frightened"!==e.state||(e.state="normal"),e}):s},N=(e,s,t)=>{let{gridSize:a,map:n,ghosts:r,ghostsActive:o,powerMode:l}=t;for(let t=1;t<s.length;t++)if(d(e,s[t]))return!0;return!!(h(e,n.obstacles)||o&&!l&&r.some(s=>"normal"===s.state&&d(e,s.position)))},T=e=>{let{snake:s,food:t,bonusFood:a,direction:n,nextDirection:r,gridSize:o,score:l,speed:i,map:c,ghosts:h,ghostsActive:y,powerMode:g,powerModeTimeLeft:f,bonusFoodTimeLeft:b,bonusFoodCounter:j,stats:M}=e;if(e.isGameOver)return e;let T=u(n,r)?r:n,G=m(s[0],T);G.x<0?G.x=o-1:G.x>=o&&(G.x=0),G.y<0?G.y=o-1:G.y>=o&&(G.y=0);let C=x(G,c.portals);C&&(G={...C});let F=g,L=f;g&&(L=f-1)<=0&&(F=!1,L=0);let O=a,E=b;a&&(E=b-1)<=0&&(O=null,E=0);let I=j+1;!O&&I>=50&&(O=v({...e,snake:[G,...s]}))&&(E=30,I=0);let R=y?w({...e,snake:[G,...s],powerMode:F}):h,P=!1,D=0;y&&F&&(R=R.map(s=>"frightened"===s.state&&d(G,s.position)?(P=!0,D+=50,{...s,state:"eaten",position:k(e)}):s));let A={...e,ghosts:R,powerMode:F};if(N(G,s,A))return{...A,isGameOver:!0};let H=[G,...s],U={...M,movesMade:M.movesMade+1,maxLength:Math.max(M.maxLength,H.length)},S=t,W=l+D,z=i;return d(G,t)?(S=p({...e,snake:H,ghosts:R}),W+=10,z=Math.max(50,i-5),U.applesEaten=M.applesEaten+1):O&&d(G,O)?(W+=30,F=!0,L=20,O=null,R=R.map(e=>({...e,state:"eaten"===e.state?"eaten":"frightened"}))):P||H.pop(),{...e,snake:H,food:S,bonusFood:O,direction:T,nextDirection:T,score:W,speed:z,ghosts:R,powerMode:F,powerModeTimeLeft:L,bonusFoodTimeLeft:E,bonusFoodCounter:I,stats:U}},G=(e,s)=>{let t=c(e,s),a=Math.floor(s/2),n=Math.floor(s/2),r=[{x:a,y:n},{x:a-1,y:n},{x:a-2,y:n}],o={snake:r,food:{x:0,y:0},bonusFood:null,direction:"RIGHT",nextDirection:"RIGHT",isGameOver:!1,score:0,gridSize:s,speed:200,map:t,ghosts:[],ghostsActive:!0,powerMode:!1,powerModeTimeLeft:0,bonusFoodTimeLeft:0,bonusFoodCounter:20,stats:{movesMade:0,applesEaten:0,maxLength:r.length}};return o.food=p(o),o.ghosts=f(o),o};var C=e=>{let{snake:s,food:t,bonusFood:n,gridSize:r,direction:o,map:l,ghosts:i,powerMode:c}=e,x=(e,t)=>{if(0===t)return"head";let a=s[t-1],n=s[t+1],r="";if(a.x<e.x?r="left":a.x>e.x?r="right":a.y<e.y?r="up":a.y>e.y&&(r="down"),!n)return"tail-".concat(r);let o="";return(n.x<e.x?o="left":n.x>e.x?o="right":n.y<e.y?o="up":n.y>e.y&&(o="down"),"left"===r&&"right"===o||"right"===r&&"left"===o||"up"===r&&"down"===o||"down"===r&&"up"===o)?"body-straight":"body-turn-".concat(r,"-").concat(o)};return(0,a.jsx)("div",{className:"game-board",style:{gridTemplateColumns:"repeat(".concat(r,", 20px)"),gridTemplateRows:"repeat(".concat(r,", 20px)")},children:(()=>{let e=[];for(let c=0;c<r;c++)for(let p=0;p<r;p++){let r={x:p,y:c},m=s.findIndex(e=>d(e,r)),u=-1!==m,y=0===m,g=d(r,t),f=!!n&&d(r,n),v=h(r,l.obstacles),b=l.portals.some(e=>d(e.entrance,r)),j=l.portals.some(e=>d(e.exit,r)),k=i.find(e=>d(e.position,r)),M="cell";if(u){if(M+=" snake",y)M+=" head"+" head-".concat(o.toLowerCase());else{let e=x(r,m);M+=" ".concat(e)}}else k?(M+=" ghost ".concat(k.type),"frightened"===k.state&&(M+=" frightened")):f?M+=" bonus-food":g?M+=" food":v?M+=" obstacle":b?M+=" portal-entrance":j&&(M+=" portal-exit");e.push((0,a.jsx)("div",{className:M,style:{gridColumn:p+1,gridRow:c+1}},"".concat(p,"-").concat(c)))}return e})()})};let F=["classic","obstacles","maze","portal"],L={classic:"Traditional snake game with no obstacles. Perfect for beginners or purists. You can pass through walls!",obstacles:"Navigate around random obstacles scattered throughout the grid. Requires careful planning. Walls are passable!",maze:"Test your skills in a maze-like environment with strategic openings. Pass through walls to find shortcuts!",portal:"Use portal pairs to teleport across the grid, plus wall-passing for even more movement options!"};var O=()=>{let[e,s]=(0,n.useState)("classic"),[t,r]=(0,n.useState)(()=>G(e,20)),[o,l]=(0,n.useState)(!1),[i,c]=(0,n.useState)(!1),d=(0,n.useCallback)(e=>{if(t.isGameOver)return;let s=t.nextDirection;switch(e.key){case"ArrowUp":s="UP";break;case"ArrowDown":s="DOWN";break;case"ArrowLeft":s="LEFT";break;case"ArrowRight":s="RIGHT";break;case" ":l(e=>!e);break;default:return}r(e=>({...e,nextDirection:s}))},[t.isGameOver,t.nextDirection]);(0,n.useEffect)(()=>(window.addEventListener("keydown",d),()=>{window.removeEventListener("keydown",d)}),[d]),(0,n.useEffect)(()=>{if(!o||t.isGameOver)return;let e=setInterval(()=>{r(T)},t.speed);return()=>{clearInterval(e)}},[o,t.isGameOver,t.speed]);let h=()=>{r(G(e,20)),l(!0),c(!0)},x=()=>{r(G(e,20)),l(!1),c(!1)},p=e=>{s(e),i&&(r(G(e,20)),l(!1))},m=e=>{t.isGameOver||r(s=>({...s,nextDirection:e}))};return(0,a.jsxs)("div",{className:"game-container",children:[(0,a.jsxs)("div",{className:"game-content",children:[(0,a.jsx)("h1",{children:"Snake Game"}),i&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"score",children:["Score: ",t.score]}),(0,a.jsxs)("div",{className:"stats",children:[(0,a.jsxs)("div",{children:["Moves: ",t.stats.movesMade]}),(0,a.jsxs)("div",{children:["Apples: ",t.stats.applesEaten]}),(0,a.jsxs)("div",{children:["Max Length: ",t.stats.maxLength]})]})]}),i?(0,a.jsx)(C,{snake:t.snake,food:t.food,bonusFood:t.bonusFood,gridSize:20,direction:t.direction,map:t.map,ghosts:t.ghosts,powerMode:t.powerMode}):(0,a.jsx)("div",{className:"map-preview-large",style:{width:"".concat(400,"px"),height:"".concat(400,"px"),backgroundImage:"linear-gradient(#f8f8f8 1px, transparent 1px),\n                             linear-gradient(90deg, #f8f8f8 1px, transparent 1px)",backgroundSize:"20px 20px",border:"3px solid #333",borderRadius:"4px",display:"flex",justifyContent:"center",alignItems:"center",position:"relative"},children:(0,a.jsx)("h2",{children:"Select a map and press Start"})}),i&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"controls",children:[(0,a.jsx)("button",{onClick:t.isGameOver?h:()=>{l(e=>!e)},children:t.isGameOver?"New Game":o?"Pause":"Resume"}),(0,a.jsx)("button",{onClick:x,children:"Change Map"}),(0,a.jsx)("button",{onClick:()=>{r(e=>({...e,ghostsActive:!e.ghostsActive}))},children:t.ghostsActive?"Disable Ghosts":"Enable Ghosts"})]}),(0,a.jsxs)("div",{className:"controls",children:[(0,a.jsx)("button",{onClick:()=>m("UP"),children:"↑"}),(0,a.jsxs)("div",{children:[(0,a.jsx)("button",{onClick:()=>m("LEFT"),children:"←"}),(0,a.jsx)("button",{onClick:()=>m("RIGHT"),children:"→"})]}),(0,a.jsx)("button",{onClick:()=>m("DOWN"),children:"↓"})]})]}),t.isGameOver&&(0,a.jsxs)("div",{className:"game-over",children:[(0,a.jsx)("h2",{children:"Game Over!"}),(0,a.jsxs)("p",{children:["Your score: ",t.score]}),(0,a.jsxs)("div",{className:"game-stats",children:[(0,a.jsxs)("p",{children:["Moves made: ",t.stats.movesMade]}),(0,a.jsxs)("p",{children:["Apples eaten: ",t.stats.applesEaten]}),(0,a.jsxs)("p",{children:["Max length: ",t.stats.maxLength]})]}),(0,a.jsx)("button",{onClick:h,children:"Play Again"}),(0,a.jsx)("button",{onClick:x,children:"Change Map"})]}),i&&(0,a.jsxs)("div",{className:"instructions",children:[(0,a.jsx)("p",{children:"Use arrow keys to move, space to pause/resume, or use on-screen controls."}),(0,a.jsxs)("div",{className:"map-legend",children:[(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon snake"}),(0,a.jsx)("span",{children:"Snake"})]}),(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon food"}),(0,a.jsx)("span",{children:"Food"})]}),"classic"!==e&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon obstacle"}),(0,a.jsx)("span",{children:"Obstacle"})]}),"portal"===e&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon portal-entrance"}),(0,a.jsx)("span",{children:"Portal In"})]}),(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon portal-exit"}),(0,a.jsx)("span",{children:"Portal Out"})]})]}),t.ghostsActive&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon ghost blinky"}),(0,a.jsx)("span",{children:"Blinky (Chase)"})]}),(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon ghost pinky"}),(0,a.jsx)("span",{children:"Pinky (Ambush)"})]}),(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon ghost inky"}),(0,a.jsx)("span",{children:"Inky (Random)"})]}),(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon ghost frightened"}),(0,a.jsx)("span",{children:"Frightened Ghost"})]})]}),(0,a.jsxs)("div",{className:"legend-item",children:[(0,a.jsx)("div",{className:"legend-icon bonus-food"}),(0,a.jsx)("span",{children:"Power Pellet"})]})]})]})]})]}),(0,a.jsxs)("div",{className:"game-sidebar",children:[(0,a.jsxs)("div",{className:"map-selection",children:[(0,a.jsx)("h3",{children:"Select Map"}),F.map(s=>(0,a.jsx)("div",{onClick:()=>p(s),children:(0,a.jsx)("div",{className:"map-preview ".concat(s," ").concat(e===s?"active":""),children:(0,a.jsx)("div",{className:"map-name",children:s.charAt(0).toUpperCase()+s.slice(1)})})},s)),(0,a.jsx)("div",{className:"map-description",children:L[e]}),!i&&(0,a.jsx)("button",{className:"start-button",onClick:h,children:"Start Game"})]}),!i&&(0,a.jsx)("div",{className:"instructions",children:(0,a.jsxs)("p",{children:[(0,a.jsx)("strong",{children:"How to Play:"}),(0,a.jsx)("br",{}),"Use arrow keys to control the snake.",(0,a.jsx)("br",{}),"Collect food to grow longer.",(0,a.jsx)("br",{}),"Avoid obstacles, yourself, and ghosts!",(0,a.jsx)("br",{}),"Collect golden power pellets to eat ghosts for bonus points!",(0,a.jsx)("br",{}),"You can pass through walls to the opposite side!",(0,a.jsx)("br",{}),"Three ghosts will chase you, each with its own behavior."]})})]})]})}}}]);